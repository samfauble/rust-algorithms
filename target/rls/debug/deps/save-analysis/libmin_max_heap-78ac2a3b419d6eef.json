{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0","program":"C:\\Users\\samfa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","min_max_heap","--edition=2018","C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=78ac2a3b419d6eef","-C","extra-filename=-78ac2a3b419d6eef","--out-dir","c:\\Users\\samfa\\Documents\\rustPractice\\algorithms\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\samfa\\Documents\\rustPractice\\algorithms\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\samfa\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\samfa\\Documents\\rustPractice\\algorithms\\target\\rls\\debug\\deps\\libmin_max_heap-78ac2a3b419d6eef.rmeta"},"prelude":{"crate_id":{"name":"min_max_heap","disambiguator":[6264610955714751864,9409359053440837603]},"crate_root":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src","external_crates":[{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3270634090130538391,14263718429753122316]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5532051063976025760,2256364509988431667]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7281929168992546274,2424678954744988439]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[353429176083156877,8877241423562725442]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12196241746694410349,3365331946273478086]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13433537899495627439,16859208643582984883]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8262757423788146228,17823423584984973278]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15770910386717746279,2673050061768012116]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15973938195753786773,1947565178479551552]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1495831041033125177,733230368880816191]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17679945988426249108,16004284943229030185]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4674106540844190265,14311593861468432536]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12112277384381649788,786361786206656603]}}],"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":0,"byte_end":23270,"line_start":1,"line_end":884,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":0,"byte_end":23270,"line_start":1,"line_end":884,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":83},{"krate":0,"index":108},{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":118},{"krate":0,"index":146},{"krate":0,"index":158},{"krate":0,"index":163},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":334},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":348},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":227},{"krate":0,"index":233},{"krate":0,"index":237},{"krate":0,"index":241},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":256},{"krate":0,"index":261},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":286},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":304},{"krate":0,"index":308}],"decl_id":null,"docs":" A double-ended priority queue.","sig":null,"attributes":[{"value":"/ A double-ended priority queue.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":62,"byte_end":96,"line_start":2,"line_end":2,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":97,"byte_end":100,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A min-max-heap is like a binary heap, but it allows extracting both","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":101,"byte_end":172,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ the minimum and maximum value efficiently. In particular, finding","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":173,"byte_end":242,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"/ either the minimum or maximum element is *O*(1). A removal of either","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":243,"byte_end":315,"line_start":6,"line_end":6,"column_start":1,"column_end":73}},{"value":"/ extremum, or an insertion, is *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":316,"byte_end":363,"line_start":7,"line_end":7,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":364,"byte_end":367,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":368,"byte_end":380,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":381,"byte_end":384,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Itâ€™s [on crates.io](https://crates.io/crates/min-max-heap), so add","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":385,"byte_end":457,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ this to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":458,"byte_end":488,"line_start":12,"line_end":12,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":489,"byte_end":492,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":493,"byte_end":504,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":505,"byte_end":523,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ min-max-heap = \"1.3.0\"","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":524,"byte_end":550,"line_start":16,"line_end":16,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":551,"byte_end":558,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":559,"byte_end":562,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This crate supports Rust version 1.32.0 and later.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":563,"byte_end":617,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":618,"byte_end":621,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## References","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":622,"byte_end":639,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":640,"byte_end":643,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ My reference for a min-max heap is","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":644,"byte_end":682,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [here](http://cglab.ca/~morin/teaching/5408/refs/minmax.pdf). Much","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":683,"byte_end":753,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/ of this code is also based on `BinaryHeap` from the standard","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":754,"byte_end":818,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ library.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":819,"byte_end":831,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":833,"byte_end":855,"line_start":28,"line_end":28,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1234,"byte_end":1244,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"MinMaxHeap","qualname":"::MinMaxHeap","value":"","parent":null,"children":[],"decl_id":null,"docs":" A double-ended priority queue.","sig":null,"attributes":[{"value":"/ A double-ended priority queue.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1059,"byte_end":1093,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1094,"byte_end":1097,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Most operations are *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1098,"byte_end":1135,"line_start":44,"line_end":44,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1458,"byte_end":1461,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<MinMaxHeap<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `MinMaxHeap`.","sig":null,"attributes":[{"value":"/ Creates a new, empty `MinMaxHeap`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1384,"byte_end":1422,"line_start":56,"line_end":56,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1427,"byte_end":1430,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ *O*(1).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1435,"byte_end":1446,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1642,"byte_end":1655,"line_start":67,"line_end":67,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<MinMaxHeap<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `MinMaxHeap` with space allocated to hold\n `len` elements.","sig":null,"attributes":[{"value":"/ Creates a new, empty `MinMaxHeap` with space allocated to hold","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1516,"byte_end":1582,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/ `len` elements.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1587,"byte_end":1606,"line_start":64,"line_end":64,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1611,"byte_end":1614,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ *O*(n).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1619,"byte_end":1630,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1808,"byte_end":1811,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"len","qualname":"<MinMaxHeap<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements in the heap.","sig":null,"attributes":[{"value":"/ The number of elements in the heap.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1733,"byte_end":1772,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1777,"byte_end":1780,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ *O*(1).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1785,"byte_end":1796,"line_start":73,"line_end":73,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1920,"byte_end":1928,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MinMaxHeap<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the heap empty?","sig":null,"attributes":[{"value":"/ Is the heap empty?","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1862,"byte_end":1884,"line_start":78,"line_end":78,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1889,"byte_end":1892,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ *O*(1).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1897,"byte_end":1908,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2165,"byte_end":2169,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"push","qualname":"<MinMaxHeap<T>>::push","value":"pub fn push(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Adds an element to the heap.","sig":null,"attributes":[{"value":"/ Adds an element to the heap.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2014,"byte_end":2046,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2051,"byte_end":2054,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Amortized *O*(log *n*); worst-case *O*(*n*) when the backing vector needs to","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2059,"byte_end":2139,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ grow.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2144,"byte_end":2153,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2383,"byte_end":2391,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"peek_min","qualname":"<MinMaxHeap<T>>::peek_min","value":"pub fn peek_min(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the minimum element, if any.","sig":null,"attributes":[{"value":"/ Gets a reference to the minimum element, if any.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2295,"byte_end":2347,"line_start":97,"line_end":97,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2352,"byte_end":2355,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ *O*(1).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2360,"byte_end":2371,"line_start":99,"line_end":99,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2868,"byte_end":2880,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"peek_min_mut","qualname":"<MinMaxHeap<T>>::peek_min_mut","value":"pub fn peek_min_mut(&mut Self) -> Option<PeekMinMut<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the minimum element, if any. Once this reference is dropped,\n the heap is adjusted if necessary.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the minimum element, if any. Once this reference is dropped,","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2528,"byte_end":2623,"line_start":108,"line_end":108,"column_start":5,"column_end":100}},{"value":"/ the heap is adjusted if necessary.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2628,"byte_end":2666,"line_start":109,"line_end":109,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2671,"byte_end":2674,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note: If the `PeekMinMut` value is leaked, the heap may be in an","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2679,"byte_end":2747,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/ inconsistent state.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2752,"byte_end":2775,"line_start":112,"line_end":112,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2780,"byte_end":2783,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ *O*(1) for the peek; *O*(log *n*) when the reference is dropped.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":2788,"byte_end":2856,"line_start":114,"line_end":114,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3196,"byte_end":3204,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"peek_max","qualname":"<MinMaxHeap<T>>::peek_max","value":"pub fn peek_max(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the maximum element, if any.","sig":null,"attributes":[{"value":"/ Gets a reference to the maximum element, if any.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3108,"byte_end":3160,"line_start":126,"line_end":126,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3165,"byte_end":3168,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ *O*(1).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3173,"byte_end":3184,"line_start":128,"line_end":128,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3623,"byte_end":3635,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"peek_max_mut","qualname":"<MinMaxHeap<T>>::peek_max_mut","value":"pub fn peek_max_mut(&mut Self) -> Option<PeekMaxMut<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the maximum element, if any. Once this reference is dropped,\n the heap is adjusted if necessary.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the maximum element, if any. Once this reference is dropped,","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3283,"byte_end":3378,"line_start":133,"line_end":133,"column_start":5,"column_end":100}},{"value":"/ the heap is adjusted if necessary.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3383,"byte_end":3421,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3426,"byte_end":3429,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Note: If the `PeekMaxMut` value is leaked, the heap may be in an","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3434,"byte_end":3502,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ inconsistent state.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3507,"byte_end":3530,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3535,"byte_end":3538,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ *O*(1) for the peek; *O*(log *n*) when the reference is dropped.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":3543,"byte_end":3611,"line_start":139,"line_end":139,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4234,"byte_end":4241,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"pop_min","qualname":"<MinMaxHeap<T>>::pop_min","value":"pub fn pop_min(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the minimum element, if any.","sig":null,"attributes":[{"value":"/ Removes the minimum element, if any.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4152,"byte_end":4192,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4197,"byte_end":4200,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4205,"byte_end":4222,"line_start":163,"line_end":163,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4572,"byte_end":4579,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"pop_max","qualname":"<MinMaxHeap<T>>::pop_max","value":"pub fn pop_max(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the maximum element, if any.","sig":null,"attributes":[{"value":"/ Removes the maximum element, if any.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4490,"byte_end":4530,"line_start":175,"line_end":175,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4535,"byte_end":4538,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4543,"byte_end":4560,"line_start":177,"line_end":177,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5076,"byte_end":5088,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"push_pop_min","qualname":"<MinMaxHeap<T>>::push_pop_min","value":"pub fn push_pop_min(&mut Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Pushes an element, then pops the minimum element.","sig":null,"attributes":[{"value":"/ Pushes an element, then pops the minimum element.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4881,"byte_end":4934,"line_start":191,"line_end":191,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4939,"byte_end":4942,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Unlike a push followed by a pop, this combined operation will","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":4947,"byte_end":5012,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ not allocate.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5017,"byte_end":5034,"line_start":194,"line_end":194,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5039,"byte_end":5042,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5047,"byte_end":5064,"line_start":196,"line_end":196,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5560,"byte_end":5572,"line_start":214,"line_end":214,"column_start":12,"column_end":24},"name":"push_pop_max","qualname":"<MinMaxHeap<T>>::push_pop_max","value":"pub fn push_pop_max(&mut Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Pushes an element, then pops the maximum element in an optimized\n fashion.","sig":null,"attributes":[{"value":"/ Pushes an element, then pops the maximum element in an optimized","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5333,"byte_end":5401,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ fashion.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5406,"byte_end":5418,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5423,"byte_end":5426,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Unlike a push followed by a pop, this combined operation will","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5431,"byte_end":5496,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ not allocate.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5501,"byte_end":5518,"line_start":211,"line_end":211,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5523,"byte_end":5526,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5531,"byte_end":5548,"line_start":213,"line_end":213,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6063,"byte_end":6074,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"replace_min","qualname":"<MinMaxHeap<T>>::replace_min","value":"pub fn replace_min(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops the minimum, then pushes an element in an optimized\n fashion.","sig":null,"attributes":[{"value":"/ Pops the minimum, then pushes an element in an optimized","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":5944,"byte_end":6004,"line_start":229,"line_end":229,"column_start":5,"column_end":65}},{"value":"/ fashion.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6009,"byte_end":6021,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6026,"byte_end":6029,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6034,"byte_end":6051,"line_start":232,"line_end":232,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6449,"byte_end":6460,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"replace_max","qualname":"<MinMaxHeap<T>>::replace_max","value":"pub fn replace_max(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Pops the maximum, then pushes an element in an optimized\n fashion.","sig":null,"attributes":[{"value":"/ Pops the maximum, then pushes an element in an optimized","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6330,"byte_end":6390,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/ fashion.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6395,"byte_end":6407,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6412,"byte_end":6415,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ *O*(log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6420,"byte_end":6437,"line_start":247,"line_end":247,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6965,"byte_end":6977,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"into_vec_asc","qualname":"<MinMaxHeap<T>>::into_vec_asc","value":"pub fn into_vec_asc(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an ascending (sorted) vector, reusing the heapâ€™s\n storage.","sig":null,"attributes":[{"value":"/ Returns an ascending (sorted) vector, reusing the heapâ€™s","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6840,"byte_end":6902,"line_start":264,"line_end":264,"column_start":5,"column_end":65}},{"value":"/ storage.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6907,"byte_end":6919,"line_start":265,"line_end":265,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6924,"byte_end":6927,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ *O*(*n* log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":6932,"byte_end":6953,"line_start":267,"line_end":267,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":7362,"byte_end":7375,"line_start":282,"line_end":282,"column_start":12,"column_end":25},"name":"into_vec_desc","qualname":"<MinMaxHeap<T>>::into_vec_desc","value":"pub fn into_vec_desc(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an descending (sorted) vector, reusing the heapâ€™s\n storage.","sig":null,"attributes":[{"value":"/ Returns an descending (sorted) vector, reusing the heapâ€™s","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":7236,"byte_end":7299,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"/ storage.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":7304,"byte_end":7316,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":7321,"byte_end":7324,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ *O*(*n* log *n*).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":7329,"byte_end":7350,"line_start":281,"line_end":281,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8629,"byte_end":8634,"line_start":335,"line_end":335,"column_start":12,"column_end":17},"name":"clear","qualname":"<MinMaxHeap<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops all items from the heap.","sig":null,"attributes":[{"value":"/ Drops all items from the heap.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8558,"byte_end":8592,"line_start":332,"line_end":332,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8597,"byte_end":8600,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ *O*(*n*)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8605,"byte_end":8617,"line_start":334,"line_end":334,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8784,"byte_end":8792,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"capacity","qualname":"<MinMaxHeap<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements the heap can hold without reallocating.","sig":null,"attributes":[{"value":"/ The number of elements the heap can hold without reallocating.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8683,"byte_end":8749,"line_start":339,"line_end":339,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8754,"byte_end":8757,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ *O*(1)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8762,"byte_end":8772,"line_start":341,"line_end":341,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9094,"byte_end":9107,"line_start":354,"line_end":354,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<MinMaxHeap<T>>::reserve_exact","value":"pub fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more\n elements to be inserted in the given `MinMaxHeap`.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8848,"byte_end":8911,"line_start":346,"line_end":346,"column_start":5,"column_end":68}},{"value":"/ elements to be inserted in the given `MinMaxHeap`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8916,"byte_end":8970,"line_start":347,"line_end":347,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8975,"byte_end":8978,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ *O*(*n*)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8983,"byte_end":8995,"line_start":349,"line_end":349,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9000,"byte_end":9003,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9008,"byte_end":9020,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9025,"byte_end":9028,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9033,"byte_end":9082,"line_start":353,"line_end":353,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9439,"byte_end":9446,"line_start":366,"line_end":366,"column_start":12,"column_end":19},"name":"reserve","qualname":"<MinMaxHeap<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for at least `additional` more\n elements to be inserted in the given `MinMaxHeap`.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for at least `additional` more","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9192,"byte_end":9256,"line_start":358,"line_end":358,"column_start":5,"column_end":69}},{"value":"/ elements to be inserted in the given `MinMaxHeap`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9261,"byte_end":9315,"line_start":359,"line_end":359,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9320,"byte_end":9323,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ *O*(*n*)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9328,"byte_end":9340,"line_start":361,"line_end":361,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9345,"byte_end":9348,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9353,"byte_end":9365,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9370,"byte_end":9373,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9378,"byte_end":9427,"line_start":365,"line_end":365,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9590,"byte_end":9603,"line_start":373,"line_end":373,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<MinMaxHeap<T>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discards extra capacity.","sig":null,"attributes":[{"value":"/ Discards extra capacity.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9525,"byte_end":9553,"line_start":370,"line_end":370,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9558,"byte_end":9561,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ *O*(*n*)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9566,"byte_end":9578,"line_start":372,"line_end":372,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9790,"byte_end":9798,"line_start":381,"line_end":381,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MinMaxHeap<T>>::into_vec","value":"pub fn into_vec(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `MinMaxHeap` and returns its elements in a vector\n in arbitrary order.","sig":null,"attributes":[{"value":"/ Consumes the `MinMaxHeap` and returns its elements in a vector","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9659,"byte_end":9725,"line_start":377,"line_end":377,"column_start":5,"column_end":71}},{"value":"/ in arbitrary order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9730,"byte_end":9753,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9758,"byte_end":9761,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ *O*(*n*)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9766,"byte_end":9778,"line_start":380,"line_end":380,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10026,"byte_end":10030,"line_start":389,"line_end":389,"column_start":12,"column_end":16},"name":"iter","qualname":"<MinMaxHeap<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a borrowing iterator over the min-max-heapâ€™s elements in\n arbitrary order.","sig":null,"attributes":[{"value":"/ Returns a borrowing iterator over the min-max-heapâ€™s elements in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9843,"byte_end":9913,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/ arbitrary order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9918,"byte_end":9938,"line_start":386,"line_end":386,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9943,"byte_end":9946,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ *O*(1) on creation, and *O*(1) for each `next()` operation.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":9951,"byte_end":10014,"line_start":388,"line_end":388,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10272,"byte_end":10277,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"drain","qualname":"<MinMaxHeap<T>>::drain","value":"pub fn drain(&mut Self) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a draining iterator over the min-max-heapâ€™s elements in\n arbitrary order.","sig":null,"attributes":[{"value":"/ Returns a draining iterator over the min-max-heapâ€™s elements in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10090,"byte_end":10159,"line_start":393,"line_end":393,"column_start":5,"column_end":72}},{"value":"/ arbitrary order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10164,"byte_end":10184,"line_start":394,"line_end":394,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10189,"byte_end":10192,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ *O*(1) on creation, and *O*(1) for each `next()` operation.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10197,"byte_end":10260,"line_start":396,"line_end":396,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10546,"byte_end":10555,"line_start":405,"line_end":405,"column_start":12,"column_end":21},"name":"drain_asc","qualname":"<MinMaxHeap<T>>::drain_asc","value":"pub fn drain_asc(&mut Self) -> DrainAsc<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a draining iterator over the min-max-heapâ€™s elements in\n ascending (min-first) order.","sig":null,"attributes":[{"value":"/ Returns a draining iterator over the min-max-heapâ€™s elements in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10346,"byte_end":10415,"line_start":401,"line_end":401,"column_start":5,"column_end":72}},{"value":"/ ascending (min-first) order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10420,"byte_end":10452,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10457,"byte_end":10460,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ *O*(1) on creation, and *O*(log *n*) for each `next()` operation.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10465,"byte_end":10534,"line_start":404,"line_end":404,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10819,"byte_end":10829,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"drain_desc","qualname":"<MinMaxHeap<T>>::drain_desc","value":"pub fn drain_desc(&mut Self) -> DrainDesc<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a draining iterator over the min-max-heapâ€™s elements in\n descending (max-first) order.","sig":null,"attributes":[{"value":"/ Returns a draining iterator over the min-max-heapâ€™s elements in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10618,"byte_end":10687,"line_start":409,"line_end":409,"column_start":5,"column_end":72}},{"value":"/ descending (max-first) order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10692,"byte_end":10725,"line_start":410,"line_end":410,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10730,"byte_end":10733,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ *O*(1) on creation, and *O*(log *n*) for each `next()` operation.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10738,"byte_end":10807,"line_start":412,"line_end":412,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11105,"byte_end":11109,"line_start":427,"line_end":427,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" A borrowed iterator over the elements of the min-max-heap in\n arbitrary order.","sig":null,"attributes":[{"value":"/ A borrowed iterator over the elements of the min-max-heap in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10912,"byte_end":10976,"line_start":422,"line_end":422,"column_start":1,"column_end":65}},{"value":"/ arbitrary order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10977,"byte_end":10997,"line_start":423,"line_end":423,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":10998,"byte_end":11001,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This type is created with","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11002,"byte_end":11031,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ [`MinMaxHeap::iter`](struct.MinMaxHeap.html#method.iter).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11032,"byte_end":11093,"line_start":426,"line_end":426,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11669,"byte_end":11677,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owning iterator over the elements of the min-max-heap in\n arbitrary order.\n","sig":null,"attributes":[{"value":"/ An owning iterator over the elements of the min-max-heap in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11573,"byte_end":11636,"line_start":446,"line_end":446,"column_start":1,"column_end":64}},{"value":"/ arbitrary order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11637,"byte_end":11657,"line_start":447,"line_end":447,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12335,"byte_end":12340,"line_start":474,"line_end":474,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"","parent":null,"children":[],"decl_id":null,"docs":" A draining iterator over the elements of the min-max-heap in\n arbitrary order.","sig":null,"attributes":[{"value":"/ A draining iterator over the elements of the min-max-heap in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12140,"byte_end":12204,"line_start":469,"line_end":469,"column_start":1,"column_end":65}},{"value":"/ arbitrary order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12205,"byte_end":12225,"line_start":470,"line_end":470,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12226,"byte_end":12229,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ This type is created with","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12230,"byte_end":12259,"line_start":472,"line_end":472,"column_start":1,"column_end":30}},{"value":"/ [`MinMaxHeap::drain`](struct.MinMaxHeap.html#method.drain).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12260,"byte_end":12323,"line_start":473,"line_end":473,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13273,"byte_end":13281,"line_start":506,"line_end":506,"column_start":12,"column_end":20},"name":"DrainAsc","qualname":"::DrainAsc","value":"","parent":null,"children":[],"decl_id":null,"docs":" A draining iterator over the elements of the min-max-heap in\n ascending (min-first) order.","sig":null,"attributes":[{"value":"/ A draining iterator over the elements of the min-max-heap in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12865,"byte_end":12929,"line_start":496,"line_end":496,"column_start":1,"column_end":65}},{"value":"/ ascending (min-first) order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12930,"byte_end":12962,"line_start":497,"line_end":497,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12963,"byte_end":12966,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ Note that each `next()` and `next_back()` operation is","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12967,"byte_end":13025,"line_start":499,"line_end":499,"column_start":1,"column_end":59}},{"value":"/ *O*(log *n*) time, so this currently provides no performance","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13026,"byte_end":13090,"line_start":500,"line_end":500,"column_start":1,"column_end":65}},{"value":"/ advantage over `pop_min()` and `pop_max()`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13091,"byte_end":13138,"line_start":501,"line_end":501,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13139,"byte_end":13142,"line_start":502,"line_end":502,"column_start":1,"column_end":4}},{"value":"/ This type is created with","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13143,"byte_end":13172,"line_start":503,"line_end":503,"column_start":1,"column_end":30}},{"value":"/ [`MinMaxHeap::drain_asc`](struct.MinMaxHeap.html#method.drain_asc).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13173,"byte_end":13244,"line_start":504,"line_end":504,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13729,"byte_end":13738,"line_start":518,"line_end":518,"column_start":12,"column_end":21},"name":"DrainDesc","qualname":"::DrainDesc","value":"","parent":null,"children":[],"decl_id":null,"docs":" A draining iterator over the elements of the min-max-heap in\n descending (max-first) order.","sig":null,"attributes":[{"value":"/ A draining iterator over the elements of the min-max-heap in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13318,"byte_end":13382,"line_start":508,"line_end":508,"column_start":1,"column_end":65}},{"value":"/ descending (max-first) order.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13383,"byte_end":13416,"line_start":509,"line_end":509,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13417,"byte_end":13420,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ Note that each `next()` and `next_back()` operation is","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13421,"byte_end":13479,"line_start":511,"line_end":511,"column_start":1,"column_end":59}},{"value":"/ *O*(log *n*) time, so this currently provides no performance","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13480,"byte_end":13544,"line_start":512,"line_end":512,"column_start":1,"column_end":65}},{"value":"/ advantage over `pop_max()` and `pop_min()`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13545,"byte_end":13592,"line_start":513,"line_end":513,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13593,"byte_end":13596,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ This type is created with","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13597,"byte_end":13626,"line_start":515,"line_end":515,"column_start":1,"column_end":30}},{"value":"/ [`MinMaxHeap::drain_desc`](struct.MinMaxHeap.html#method.drain_desc).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13627,"byte_end":13700,"line_start":516,"line_end":516,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15909,"byte_end":15919,"line_start":620,"line_end":620,"column_start":12,"column_end":22},"name":"PeekMinMut","qualname":"::PeekMinMut","value":"PeekMinMut {  }","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" Structure wrapping a mutable reference to the minimum item on a\n `MinMaxHeap`.","sig":null,"attributes":[{"value":"/ Structure wrapping a mutable reference to the minimum item on a","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15581,"byte_end":15648,"line_start":612,"line_end":612,"column_start":1,"column_end":68}},{"value":"/ `MinMaxHeap`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15649,"byte_end":15666,"line_start":613,"line_end":613,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15667,"byte_end":15670,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`peek_min_mut`] method on [`MinMaxHeap`]. See","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15671,"byte_end":15753,"line_start":615,"line_end":615,"column_start":1,"column_end":83}},{"value":"/ its documentation for more.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15754,"byte_end":15785,"line_start":616,"line_end":616,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15786,"byte_end":15789,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ [`peek_min_mut`]: struct.MinMaxHeap.html#method.peek_min_mut","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15790,"byte_end":15854,"line_start":618,"line_end":618,"column_start":1,"column_end":65}},{"value":"/ [`MinMaxHeap`]: struct.MinMaxHeap.html","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15855,"byte_end":15897,"line_start":619,"line_end":619,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17016,"byte_end":17019,"line_start":660,"line_end":660,"column_start":12,"column_end":15},"name":"pop","qualname":"<PeekMinMut>::pop","value":"pub fn pop(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the peeked value from the heap and returns it.\n","sig":null,"attributes":[{"value":"/ Removes the peeked value from the heap and returns it.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16946,"byte_end":17004,"line_start":659,"line_end":659,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17467,"byte_end":17477,"line_start":675,"line_end":675,"column_start":12,"column_end":22},"name":"PeekMaxMut","qualname":"::PeekMaxMut","value":"PeekMaxMut {  }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" Structure wrapping a mutable reference to the maximum item on a\n `MinMaxHeap`.","sig":null,"attributes":[{"value":"/ Structure wrapping a mutable reference to the maximum item on a","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17139,"byte_end":17206,"line_start":667,"line_end":667,"column_start":1,"column_end":68}},{"value":"/ `MinMaxHeap`.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17207,"byte_end":17224,"line_start":668,"line_end":668,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17225,"byte_end":17228,"line_start":669,"line_end":669,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`peek_max_mut`] method on [`MinMaxHeap`]. See","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17229,"byte_end":17311,"line_start":670,"line_end":670,"column_start":1,"column_end":83}},{"value":"/ its documentation for more.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17312,"byte_end":17343,"line_start":671,"line_end":671,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17344,"byte_end":17347,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ [`peek_max_mut`]: struct.MinMaxHeap.html#method.peek_max_mut","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17348,"byte_end":17412,"line_start":673,"line_end":673,"column_start":1,"column_end":65}},{"value":"/ [`MinMaxHeap`]: struct.MinMaxHeap.html","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17413,"byte_end":17455,"line_start":674,"line_end":674,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18832,"byte_end":18835,"line_start":722,"line_end":722,"column_start":12,"column_end":15},"name":"pop","qualname":"<PeekMaxMut>::pop","value":"pub fn pop(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes the peeked value from the heap and returns it.\n","sig":null,"attributes":[{"value":"/ Removes the peeked value from the heap and returns it.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18762,"byte_end":18820,"line_start":721,"line_end":721,"column_start":5,"column_end":63}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\hole.rs","byte_start":23568,"byte_end":23572,"line_start":16,"line_end":16,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\hole.rs","byte_start":26970,"byte_end":26974,"line_start":147,"line_end":147,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\hole.rs","byte_start":30180,"byte_end":30184,"line_start":260,"line_end":260,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1278,"byte_end":1288,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1364,"byte_end":1374,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1994,"byte_end":2004,"line_start":86,"line_end":86,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8538,"byte_end":8548,"line_start":331,"line_end":331,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11168,"byte_end":11172,"line_start":429,"line_end":429,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11391,"byte_end":11395,"line_start":438,"line_end":438,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11722,"byte_end":11730,"line_start":450,"line_end":450,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11937,"byte_end":11945,"line_start":459,"line_end":459,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11983,"byte_end":11993,"line_start":461,"line_end":461,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12398,"byte_end":12403,"line_start":476,"line_end":476,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12618,"byte_end":12623,"line_start":485,"line_end":485,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12669,"byte_end":12679,"line_start":487,"line_end":487,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13796,"byte_end":13804,"line_start":520,"line_end":520,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13907,"byte_end":13916,"line_start":526,"line_end":526,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14028,"byte_end":14036,"line_start":532,"line_end":532,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14266,"byte_end":14275,"line_start":544,"line_end":544,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14516,"byte_end":14524,"line_start":556,"line_end":556,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14652,"byte_end":14661,"line_start":562,"line_end":562,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14787,"byte_end":14795,"line_start":568,"line_end":568,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14903,"byte_end":14912,"line_start":574,"line_end":574,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15034,"byte_end":15044,"line_start":584,"line_end":584,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15215,"byte_end":15225,"line_start":596,"line_end":596,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15416,"byte_end":15426,"line_start":604,"line_end":604,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16035,"byte_end":16045,"line_start":625,"line_end":625,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16237,"byte_end":16247,"line_start":633,"line_end":633,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16398,"byte_end":16408,"line_start":641,"line_end":641,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16669,"byte_end":16679,"line_start":650,"line_end":650,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16922,"byte_end":16932,"line_start":658,"line_end":658,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17615,"byte_end":17625,"line_start":681,"line_end":681,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17830,"byte_end":17840,"line_start":689,"line_end":689,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18166,"byte_end":18176,"line_start":703,"line_end":703,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18461,"byte_end":18471,"line_start":712,"line_end":712,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18738,"byte_end":18748,"line_start":720,"line_end":720,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\hole.rs","byte_start":23568,"byte_end":23572,"line_start":16,"line_end":16,"column_start":13,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\hole.rs","byte_start":26970,"byte_end":26974,"line_start":147,"line_end":147,"column_start":23,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\hole.rs","byte_start":30180,"byte_end":30184,"line_start":260,"line_end":260,"column_start":22,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1278,"byte_end":1288,"line_start":49,"line_end":49,"column_start":21,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":324},"to":{"krate":2,"index":2810}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1364,"byte_end":1374,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":1994,"byte_end":2004,"line_start":86,"line_end":86,"column_start":14,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":8538,"byte_end":8548,"line_start":331,"line_end":331,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11168,"byte_end":11172,"line_start":429,"line_end":429,"column_start":26,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":158},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11391,"byte_end":11395,"line_start":438,"line_end":438,"column_start":35,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":158},"to":{"krate":2,"index":7129}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11722,"byte_end":11730,"line_start":450,"line_end":450,"column_start":22,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11937,"byte_end":11945,"line_start":459,"line_end":459,"column_start":31,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":7129}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":11983,"byte_end":11993,"line_start":461,"line_end":461,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":324},"to":{"krate":2,"index":7077}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12398,"byte_end":12403,"line_start":476,"line_end":476,"column_start":26,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12618,"byte_end":12623,"line_start":485,"line_end":485,"column_start":35,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":195},"to":{"krate":2,"index":7129}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":12669,"byte_end":12679,"line_start":487,"line_end":487,"column_start":34,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":324},"to":{"krate":2,"index":7073}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13796,"byte_end":13804,"line_start":520,"line_end":520,"column_start":22,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":13907,"byte_end":13916,"line_start":526,"line_end":526,"column_start":22,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14028,"byte_end":14036,"line_start":532,"line_end":532,"column_start":31,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14266,"byte_end":14275,"line_start":544,"line_end":544,"column_start":31,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":7240}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14516,"byte_end":14524,"line_start":556,"line_end":556,"column_start":42,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":7104}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14652,"byte_end":14661,"line_start":562,"line_end":562,"column_start":42,"column_end":51},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":7104}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14787,"byte_end":14795,"line_start":568,"line_end":568,"column_start":40,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":7129}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":14903,"byte_end":14912,"line_start":574,"line_end":574,"column_start":40,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":343},"to":{"krate":2,"index":7129}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15034,"byte_end":15044,"line_start":584,"line_end":584,"column_start":31,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":324},"to":{"krate":2,"index":2738}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15215,"byte_end":15225,"line_start":596,"line_end":596,"column_start":28,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":324},"to":{"krate":2,"index":7086}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":15416,"byte_end":15426,"line_start":604,"line_end":604,"column_start":49,"column_end":59},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":324},"to":{"krate":2,"index":7086}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16035,"byte_end":16045,"line_start":625,"line_end":625,"column_start":42,"column_end":52},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16237,"byte_end":16247,"line_start":633,"line_end":633,"column_start":27,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16398,"byte_end":16408,"line_start":641,"line_end":641,"column_start":28,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16669,"byte_end":16679,"line_start":650,"line_end":650,"column_start":31,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":261},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":16922,"byte_end":16932,"line_start":658,"line_end":658,"column_start":18,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17615,"byte_end":17625,"line_start":681,"line_end":681,"column_start":42,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":8812}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":17830,"byte_end":17840,"line_start":689,"line_end":689,"column_start":27,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":3078}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18166,"byte_end":18176,"line_start":703,"line_end":703,"column_start":28,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":3054}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18461,"byte_end":18471,"line_start":712,"line_end":712,"column_start":31,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":286},"to":{"krate":2,"index":3067}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\min-max-heap-1.3.0\\src\\lib.rs","byte_start":18738,"byte_end":18748,"line_start":720,"line_end":720,"column_start":18,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}}]}