{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15","program":"C:\\Users\\samfa\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","matrixmultiply","C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=c085625af2d850b5","-C","extra-filename=-c085625af2d850b5","--out-dir","c:\\Users\\samfa\\Documents\\rustPractice\\algorithms\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\samfa\\Documents\\rustPractice\\algorithms\\target\\rls\\debug\\deps","--extern","rawpointer=c:\\Users\\samfa\\Documents\\rustPractice\\algorithms\\target\\rls\\debug\\deps\\librawpointer-e78bbd7f1060e3c4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\samfa\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\samfa\\Documents\\rustPractice\\algorithms\\target\\rls\\debug\\deps\\libmatrixmultiply-c085625af2d850b5.rmeta"},"prelude":{"crate_id":{"name":"matrixmultiply","disambiguator":[13019172803571084838,292249894036936625]},"crate_root":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src","external_crates":[{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3270634090130538391,14263718429753122316]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5532051063976025760,2256364509988431667]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7281929168992546274,2424678954744988439]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[353429176083156877,8877241423562725442]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12196241746694410349,3365331946273478086]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[13433537899495627439,16859208643582984883]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8262757423788146228,17823423584984973278]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15770910386717746279,2673050061768012116]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[15973938195753786773,1947565178479551552]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1495831041033125177,733230368880816191]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17679945988426249108,16004284943229030185]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[4674106540844190265,14311593861468432536]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[12112277384381649788,786361786206656603]}},{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","num":14,"id":{"name":"rawpointer","disambiguator":[14529993592137138788,10809938396700857631]}}],"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":327,"byte_end":2167,"line_start":8,"line_end":65,"column_start":1,"column_end":21}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":2140,"byte_end":2145,"line_start":64,"line_end":64,"column_start":15,"column_end":20},"alias_span":null,"name":"sgemm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":2161,"byte_end":2166,"line_start":65,"line_end":65,"column_start":15,"column_end":20},"alias_span":null,"name":"dgemm","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":327,"byte_end":2167,"line_start":8,"line_end":65,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":19},{"krate":0,"index":48},{"krate":0,"index":96},{"krate":0,"index":124},{"krate":0,"index":152},{"krate":0,"index":165},{"krate":0,"index":168}],"decl_id":null,"docs":" \n General matrix multiplication for f32, f64 matrices.\n \n Allows arbitrary row, column strided matrices.\n \n Uses the same microkernel algorithm as [BLIS][bl], but in a much simpler\n and less featureful implementation.\n See their [multithreading][mt] page for a very good diagram over how\n the algorithm partitions the matrix (*Note:* this crate does not implement\n multithreading).\n \n [bl]: https://github.com/flame/blis\n \n [mt]: https://github.com/flame/blis/wiki/Multithreading","sig":null,"attributes":[{"value":"/ ","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":327,"byte_end":331,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"/ General matrix multiplication for f32, f64 matrices.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":332,"byte_end":388,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/ ","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":389,"byte_end":393,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"/ Allows arbitrary row, column strided matrices.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":394,"byte_end":444,"line_start":11,"line_end":11,"column_start":1,"column_end":51}},{"value":"/ ","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":445,"byte_end":449,"line_start":12,"line_end":12,"column_start":1,"column_end":5}},{"value":"/ Uses the same microkernel algorithm as [BLIS][bl], but in a much simpler","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":450,"byte_end":526,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ and less featureful implementation.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":527,"byte_end":566,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ See their [multithreading][mt] page for a very good diagram over how","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":567,"byte_end":639,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ the algorithm partitions the matrix (*Note:* this crate does not implement","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":640,"byte_end":718,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ multithreading).","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":719,"byte_end":739,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/ ","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":740,"byte_end":744,"line_start":18,"line_end":18,"column_start":1,"column_end":5}},{"value":"/ [bl]: https://github.com/flame/blis","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":745,"byte_end":784,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ ","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":785,"byte_end":789,"line_start":20,"line_end":20,"column_start":1,"column_end":5}},{"value":"/ [mt]: https://github.com/flame/blis/wiki/Multithreading","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":790,"byte_end":849,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":850,"byte_end":853,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Matrix Representation","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":854,"byte_end":882,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":883,"byte_end":886,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ **matrixmultiply** supports matrices with general stride, so a matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":887,"byte_end":960,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ is passed using a pointer and four integers:","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":961,"byte_end":1009,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1010,"byte_end":1013,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ - `a: *const f32`, pointer to the first element in the matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1014,"byte_end":1079,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ - `m: usize`, number of rows","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1080,"byte_end":1112,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"/ - `k: usize`, number of columns","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1113,"byte_end":1148,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ - `rsa: isize`, row stride","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1149,"byte_end":1179,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/ - `csa: isize`, column stride","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1180,"byte_end":1213,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1214,"byte_end":1217,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ In this example, A is a m by k matrix. `a` is a pointer to the element at","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1218,"byte_end":1295,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ index *0, 0*.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1296,"byte_end":1313,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1314,"byte_end":1317,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The *row stride* is the pointer offset (in number of elements) to the","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1318,"byte_end":1391,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ element on the next row. It’s the distance from element *i, j* to *i + 1,","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1392,"byte_end":1471,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ j*.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1472,"byte_end":1479,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1480,"byte_end":1483,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The *column stride* is the pointer offset (in number of elements) to the","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1484,"byte_end":1560,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ element in the next column. It’s the distance from element *i, j* to *i,","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1561,"byte_end":1639,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ j + 1*.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1640,"byte_end":1651,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1652,"byte_end":1655,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ For example for a contiguous matrix, row major strides are *rsa=k,","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1656,"byte_end":1726,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ csa=1* and column major strides are *rsa=1, csa=m*.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1727,"byte_end":1782,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1783,"byte_end":1786,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Stides can be negative or even zero, but for a mutable matrix elements","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1787,"byte_end":1861,"line_start":48,"line_end":48,"column_start":1,"column_end":75}},{"value":"/ may not alias each other.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\lib.rs","byte_start":1862,"byte_end":1891,"line_start":49,"line_end":49,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\kernel.rs","byte_start":6469,"byte_end":6473,"line_start":11,"line_end":11,"column_start":10,"column_end":14},"name":"Elem","qualname":"::kernel::GemmKernel::Elem","value":"type Elem: Element;","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9256,"byte_end":9261,"line_start":37,"line_end":37,"column_start":15,"column_end":20},"name":"sgemm","qualname":"::gemm::sgemm","value":"pub unsafe fn sgemm(usize, usize, usize, f32, *const f32, isize, isize,\n                    *const f32, isize, isize, f32, *mut f32, isize, isize)","parent":null,"children":[],"decl_id":null,"docs":" General matrix multiplication (f32)","sig":null,"attributes":[{"value":"/ General matrix multiplication (f32)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8729,"byte_end":8768,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8769,"byte_end":8772,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ C ← α A B + β C","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8773,"byte_end":8796,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8797,"byte_end":8800,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ + m, k, n: dimensions","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8801,"byte_end":8826,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"/ + a, b, c: pointer to the first element in the matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8827,"byte_end":8884,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ + A: m by k matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8885,"byte_end":8907,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/ + B: k by n matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8908,"byte_end":8930,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ + C: m by n matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8931,"byte_end":8953,"line_start":29,"line_end":29,"column_start":1,"column_end":23}},{"value":"/ + rs<em>x</em>: row stride of *x*","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8954,"byte_end":8991,"line_start":30,"line_end":30,"column_start":1,"column_end":38}},{"value":"/ + cs<em>x</em>: col stride of *x*","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":8992,"byte_end":9029,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9030,"byte_end":9033,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Strides for A and B may be arbitrary. Strides for C must not result in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9034,"byte_end":9108,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ elements that alias each other, for example they can not be zero.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9109,"byte_end":9178,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9179,"byte_end":9182,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ If β is zero, then C does not need to be initialized.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9183,"byte_end":9241,"line_start":36,"line_end":36,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":10133,"byte_end":10138,"line_start":70,"line_end":70,"column_start":15,"column_end":20},"name":"dgemm","qualname":"::gemm::dgemm","value":"pub unsafe fn dgemm(usize, usize, usize, f64, *const f64, isize, isize,\n                    *const f64, isize, isize, f64, *mut f64, isize, isize)","parent":null,"children":[],"decl_id":null,"docs":" General matrix multiplication (f64)","sig":null,"attributes":[{"value":"/ General matrix multiplication (f64)","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9606,"byte_end":9645,"line_start":54,"line_end":54,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9646,"byte_end":9649,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ C ← α A B + β C","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9650,"byte_end":9673,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9674,"byte_end":9677,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ + m, k, n: dimensions","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9678,"byte_end":9703,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/ + a, b, c: pointer to the first element in the matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9704,"byte_end":9761,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ + A: m by k matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9762,"byte_end":9784,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/ + B: k by n matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9785,"byte_end":9807,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/ + C: m by n matrix","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9808,"byte_end":9830,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/ + rs<em>x</em>: row stride of *x*","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9831,"byte_end":9868,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/ + cs<em>x</em>: col stride of *x*","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9869,"byte_end":9906,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9907,"byte_end":9910,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Strides for A and B may be arbitrary. Strides for C must not result in","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9911,"byte_end":9985,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ elements that alias each other, for example they can not be zero.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":9986,"byte_end":10055,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":10056,"byte_end":10059,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ If β is zero, then C does not need to be initialized.","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\gemm.rs","byte_start":10060,"byte_end":10118,"line_start":69,"line_end":69,"column_start":1,"column_end":58}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\sgemm_kernel.rs","byte_start":20740,"byte_end":20744,"line_start":26,"line_end":26,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\dgemm_kernel.rs","byte_start":23664,"byte_end":23668,"line_start":26,"line_end":26,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\util.rs","byte_start":26678,"byte_end":26688,"line_start":23,"line_end":23,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\kernel.rs","byte_start":7466,"byte_end":7470,"line_start":51,"line_end":51,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2842},"to":{"krate":0,"index":30}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\sgemm_kernel.rs","byte_start":20740,"byte_end":20744,"line_start":26,"line_end":26,"column_start":21,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":103},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\dgemm_kernel.rs","byte_start":23664,"byte_end":23668,"line_start":26,"line_end":26,"column_start":21,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":131},"to":{"krate":0,"index":20}},{"span":{"file_name":"C:\\Users\\samfa\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\matrixmultiply-0.1.15\\src\\util.rs","byte_start":26678,"byte_end":26688,"line_start":23,"line_end":23,"column_start":19,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":7240}}]}